name: Publish

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry run (test without publishing)'
        required: false
        default: 'false'
        type: boolean

env:
  NODE_VERSION: 20

jobs:
  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    environment: release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: bun install

      - name: Run tests
        run: |
          bun run lint
          bun run build
          bun run test

      - name: Extract version info
        id: version
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
          
          GO_VERSION=$(node -p "require('./package.json').goSourceVersion || 'unknown'")
          echo "go_version=$GO_VERSION" >> $GITHUB_OUTPUT

      - name: Dry run check
        if: inputs.dry_run == 'true' || github.event_name == 'workflow_dispatch'
        run: |
          echo "üèÉ DRY RUN MODE - Not publishing to NPM"
          npm pack --dry-run
          echo "‚úÖ Package would be published successfully"

      - name: Publish to NPM
        if: inputs.dry_run != 'true' && github.event_name == 'release'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "üì¶ Publishing @tsports/go-colorful@${{ steps.version.outputs.version }}"
          npm publish --access public

      - name: Update release info
        if: inputs.dry_run != 'true' && github.event_name == 'release'
        uses: actions/github-script@v7
        with:
          script: |
            const version = "${{ steps.version.outputs.version }}";
            const goVersion = "${{ steps.version.outputs.go_version }}";
            
            // Add NPM info to release
            const npmInfo = `
            
            ### üì¶ NPM Package Published
            - **Package**: [@tsports/go-colorful](https://www.npmjs.com/package/@tsports/go-colorful)
            - **Version**: ${version}
            - **Install**: \`npm install @tsports/go-colorful@${version}\`
            
            Published successfully to NPM! üéâ`;
            
            if (context.payload.release) {
              await github.rest.repos.updateRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: context.payload.release.id,
                body: context.payload.release.body + npmInfo,
              });
            }